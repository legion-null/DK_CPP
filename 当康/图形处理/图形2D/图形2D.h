#pragma once

#include "基础类/对象/对象.h"

#include "图形处理/像素点2D/像素点2D.h"

命名空间 当康 {
命名空间 图形处理 {

抽象类 图形2D: 继承 基础类::对象 {
抽象类声明(图形2D)

保护:
	像素点2D 位置;
	像素点2D *顶点 = 空指针;

公开:
	图形2D(i32 x, i32 y) {
		构造(x, y);
	}

	图形2D(只读 像素点2D &位置) {
		构造(位置);
	}

公开:
	图形2D& 构造();
	void 析构();

公开:
	图形2D& 构造(i32 x, i32 y);
	图形2D& 构造(只读 像素点2D &位置);

公开:
	图形2D& 复制构造(只读 图形2D &其他实例);
	图形2D& 移动构造(图形2D &&其他实例);

公开:
	i32 获取x() 只读;
	i32 获取y() 只读;

	void 获取位置(i32 &x, i32 &y) 只读;

	只读 像素点2D& 获取位置() 只读;

公开:
	void 设置x(i32 x);
	void 设置y(i32 y);

	void 设置位置(i32 x, i32 y);

	void 设置位置(只读 像素点2D &位置);

公开:
	只读 像素点2D& 获取顶点(i32 序号) 只读;

公开:
	虚函数 f64 计算面积() = 0;
};

}
}

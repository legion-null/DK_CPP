#pragma once

#include "模板容器/链表/链表.hpp"

命名空间 当康 {
命名空间 模板容器 {

模板<类 E>
模板类 栈: 继承 模板容器::链表<E> {
模板声明(栈)

公开:
	栈& 构造() {
		返回 本体;
	}

	void 析构() {

	}

公开:
	栈& 复制构造(只读 栈 &其他实例){
		返回 本体;
	}

	栈& 移动构造(栈 &&其他实例){
		返回 本体;
	}

公开:
	E& 获取栈底成员() {
		if (本元->为空())
			抛出 基础类::异常("");

		返回 本元->头节点->成员;
	}

	E& 获取栈顶成员() {
		if (本元->为空())
			抛出 基础类::异常("");

		返回 本元->头节点->上一个->成员;
	}

公开:
	void 压栈(只读 E &成员) {
		本元->增加成员(成员);
	}

	E 弹栈() {
		E 栈顶成员 = 获取栈顶成员();
		本元->删除成员(本元->获取成员数量() - 1);
		返回 栈顶成员;
	}

};

模板定义(当康::模板容器::栈)

}
}

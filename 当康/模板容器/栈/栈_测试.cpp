#include "当康.h"

引入 当康;

引入 当康::基础类;
引入 当康::包装类;
引入 当康::开发者;

引入 当康::模板容器;

静态 void 打印容器内容(模板容器::容器<字符串> *容器指针) {
	i32 n = 容器指针->获取成员数量();
	日志::格式化打印日志(日志::一般信息, "0x%016x [%d]\n", 容器指针, n);

	for (i32 i = 0; i < n; i++) {
		日志::格式化打印日志(日志::一般信息, "    [%d] %s\n", i, (*容器指针)[i].获取文本());
	}
}

i32 模板容器_栈_测试(i32 参数个数, c8 **参数列表) {
	(void) 参数个数;
	(void) 参数列表;

	栈<字符串> 测试容器;

	测试容器.压栈("劳逸结合是不错，但也别放松过头。");
	打印容器内容(&测试容器);
	测试容器.压栈("有时明月无人夜，独向昭潭制恶龙。");
	打印容器内容(&测试容器);
	测试容器.压栈("阴阳有序，命运无常，死亡难以预测，却也有它的规矩。");
	打印容器内容(&测试容器);
	测试容器.压栈("律法即是约束，也是工具。");
	打印容器内容(&测试容器);
	测试容器.压栈("赌徒永远会把希望寄托在下一颗骰子上，但最后赚钱的，当然是从来不碰骰子的庄家。");
	打印容器内容(&测试容器);

	测试容器.弹栈();
	打印容器内容(&测试容器);
	测试容器.弹栈();
	打印容器内容(&测试容器);
	测试容器.弹栈();
	打印容器内容(&测试容器);
	测试容器.弹栈();
	打印容器内容(&测试容器);
	测试容器.弹栈();
	打印容器内容(&测试容器);

	返回 0;
}

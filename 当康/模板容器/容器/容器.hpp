#pragma once

#include "基础类/对象/对象.h"

#include "模板容器/可迭代接口/可迭代接口.h"

命名空间 当康 {
命名空间 模板容器 {

模板<类 E>
模板类 容器: 继承 基础类::对象, 虚继承 可迭代接口<E> {
模板声明(容器)

公开:
	容器& 构造() {
		返回 本体;
	}

	void 析构() {

	}

公开:
	容器& 复制构造(只读 容器 &其他实例) {
		抛出 基础类::异常("容器:复制构造方法不存在！\n"); // 默认操作，实现复制构造方法需将其删除

		返回 本体;
	}

	容器& 移动构造(容器 &&其他实例) {
		抛出 基础类::异常("容器:移动构造方法不存在！\n"); // 默认操作，实现移动构造方法需将其删除

		返回 本体;
	}

公开:
	虚函数 void 增加成员(只读 E &成员) = 0;

	虚函数 void 删除成员(只读 E &成员) = 0;

	虚函数 void 修改成员(只读 E &原成员, 只读 E &现成员) = 0;

	虚函数 E 查找成员(i32 索引) = 0;

公开:

};

模板定义(当康::模板容器::容器)

}
}

#include <SDL2/SDL.h>

#include "当康.h"

#include "屏幕_SDL2.h"

引入 当康::基础类;
引入 当康::包装类;
引入 当康::开发者;

命名空间 当康 {
命名空间 图形处理 {

类定义(当康::图形处理::屏幕_SDL2)

结构体 SDL2数据 {
	SDL_Window *窗口;
	SDL_Surface *图层;
	u8 *帧缓冲;
	u8 **行缓冲;
};

屏幕_SDL2& 屏幕_SDL2::构造() {
	日志::格式化打印日志(日志::调试信息, "屏幕_SDL2& 屏幕_SDL2::构造()\n");
	// 构造("SDL2_TFT液晶模拟器", 800, 600, 32, 图形::显示方向::不旋转);
	返回 本体;
}

void 屏幕_SDL2::析构() {

}

屏幕_SDL2& 屏幕_SDL2::构造(只读 基础类::字符串 &屏幕名称, i32 宽度, i32 高度, i8 像素色深, 图形::显示方向 方向) {
	日志::格式化打印日志(日志::调试信息, "屏幕_SDL2& 屏幕_SDL2::构造(只读 基础类::字符串 &屏幕名称 = \"%s\", i32 宽度 = %d, i32 高度 = %d, i32 像素色深 = %d, 图形::显示方向 方向 = %d)\n", 屏幕名称.获取文本(), 宽度, 高度, 像素色深, 方向);

	屏幕::构造(宽度, 高度, 像素色深, 方向);

	本元->屏幕名称 = 屏幕名称;

	::SDL_Init(SDL_INIT_EVERYTHING);

	sdl2->窗口 = ::SDL_CreateWindow(本元->屏幕名称.获取文本(), SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, 宽度, 高度, SDL_WINDOW_SHOWN);
	sdl2->图层 = ::SDL_GetWindowSurface(sdl2->窗口);

	// 内存缓冲区映射
	sdl2->帧缓冲 = (u8*) (sdl2->图层->pixels);

	如果 (sdl2->行缓冲 != 空指针)
		删除[] sdl2->行缓冲;

	sdl2->行缓冲 = 创建 u8*[本元->高度];

	循环 (i32 i = 0; i < 本元->高度; i++)
		sdl2->行缓冲[i] = &(sdl2->帧缓冲[行缓冲区大小 * i]);

	日志::格式化打印日志(日志::调试信息, "完成 屏幕_SDL2& 屏幕_SDL2::构造(只读 基础类::字符串 &屏幕名称 = \"%s\", i32 宽度 = %d, i32 高度 = %d, i32 像素色深 = %d, 图形::显示方向 方向 = %d)\n", 屏幕名称.获取文本(), 宽度, 高度, 像素色深, 方向);

	返回 本体;
}

屏幕_SDL2& 屏幕_SDL2::复制构造(只读 屏幕_SDL2 &其他实例) {
	返回 本体;
}

屏幕_SDL2& 屏幕_SDL2::移动构造(屏幕_SDL2 &&其他实例) {
	返回 本体;
}

void 屏幕_SDL2::刷新矩形区域(i32 x0, i32 y0, i32 宽度, i32 高度) {
	::SDL_UpdateWindowSurface(sdl2->窗口);
}

void 屏幕_SDL2::刷新() {
	::SDL_UpdateWindowSurface(sdl2->窗口);
}

}
}

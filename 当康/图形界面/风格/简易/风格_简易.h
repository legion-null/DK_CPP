#pragma once

#include "图形界面/风格/风格.h"

命名空间 当康 {
命名空间 图形界面 {

类 风格_简易: 继承 风格 {
类声明(风格_简易)

保护:
	静态 只读 图形处理::颜色 默认组件边框颜色;
	静态 只读 图形处理::颜色 默认组件背景颜色;

公开:
	静态 风格* 获取风格(组件 *组件指针);

保护:
	图形处理::颜色 组件边框颜色 = 默认组件边框颜色;
	图形处理::颜色 组件背景颜色 = 默认组件背景颜色;

公开:
	风格_简易(组件 *组件指针) {
		构造(组件指针);
	}

公开:
	风格_简易& 构造();
	void 析构();

公开:
	风格_简易& 构造(组件 *组件指针);

公开:
	风格_简易& 复制构造(只读 风格_简易 &其他实例);
	风格_简易& 移动构造(风格_简易 &&其他实例);

公开:
	虚函数 void 绘制组件边框(图形处理::画笔 *笔) 覆盖;
	虚函数 void 绘制组件背景(图形处理::画笔 *笔) 覆盖;

公开:
	虚函数 void 绘制组件(图形处理::画笔 *笔) 覆盖;
};

}
}

#include "组件/风格_简易_组件.h"
#include "容器/风格_简易_容器.h"

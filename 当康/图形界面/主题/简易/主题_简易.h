#pragma once

#include "图形界面/主题/主题.h"

#include "图形处理/颜色/颜色.h"

命名空间 当康 {
命名空间 图形界面 {

类 主题_简易: 继承 主题 {
类声明(主题_简易)

保护:
	静态 只读 图形处理::颜色 默认前景色;
	静态 只读 图形处理::颜色 默认背景色;
	静态 只读 图形处理::颜色 默认强调色;

公开:
	主题_简易& 构造();
	void 析构();

公开:
	主题_简易& 复制构造(只读 主题_简易 &其他实例);
	主题_简易& 移动构造(主题_简易 &&其他实例);

保护:
	虚函数 void 绘制边框(图形处理::画笔 *画笔, 组件 *当前组件) 覆盖;
	虚函数 void 绘制背景(图形处理::画笔 *画笔, 组件 *当前组件) 覆盖;

公开:
	虚函数 void 绘制标签(图形处理::画笔 *画笔, 标签 *当前组件) 覆盖;

};

}
}

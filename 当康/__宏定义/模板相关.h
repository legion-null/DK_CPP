#pragma once

#include "定义.h"

// 通用

// 模板反射声明
#define __模板__反射声明(类型名) \
\
公开:\
	静态 只读 基础类::字符串& 返回类全名() {\
		静态 只读 基础类::字符串 *类全名 = 创建 基础类::字符串(标识符转字符串(类型名));\
		返回 *类全名;\
	}\
\
公开:\
	虚函数 只读 基础类::字符串& 获取类全名() {\
		返回 返回类全名();\
	}\
\

// 模板函数声明
#define __模板__函数声明(类型名,封装) \
\
__类__函数声明(类型名,封装)\
\

// 模板类

// 声明
#define	模板声明(类型名) \
\
__模板__反射声明(类型名)\
__模板__函数声明(类型名,公开)\
\

// 定义
#define	模板定义(类型全名) \
\



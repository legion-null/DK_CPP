#pragma once

#include "模板容器/容器/容器.hpp"

#include "模板容器/链表/链表.hpp"

命名空间 当康 {
命名空间 模板容器 {

模板<类 E>
模板类 有向图: 继承 模板容器::容器<E> {
模板声明(有向图)

保护:
	模板<类 E1>
	模板类 节点 {
	公开:
		链表<节点<E1>*> 入节点;
		链表<节点<E1>*> 出节点;
		E1 成员;

	公开:

	};

公开:
	有向图& 构造() {
		返回 本体;
	}

	void 析构() {

	}

公开:
	有向图& 复制构造(只读 有向图 &其他实例) {
		返回 本体;
	}

	有向图& 移动构造(有向图 &&其他实例) {
		返回 本体;
	}
};

模板定义(当康::模板容器::有向图)

}
}

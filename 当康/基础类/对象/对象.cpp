#include "当康.h"

引入 当康::基础类;
引入 当康::包装类;
引入 当康::开发者;

命名空间 当康 {
命名空间 基础类 {

类定义(当康::基础类::对象)

bool 对象::对象类型比较(对象 *对象1, 对象 *对象2) {
	if (对象1 == 空指针 或 对象2 == 空指针)
		抛出 异常("");

	if (对象1->获取类全名() == 对象2->获取类全名())
		返回 真;
	else
		返回 假;
}

bool 对象::对象类型比较(对象 &对象1, 对象 &对象2) {
	返回 对象类型比较(&对象1, &对象2);
}

bool 对象::对象类型比较(对象 &对象1, 对象 *对象2) {
	返回 对象类型比较(&对象1, 对象2);
}

对象& 对象::构造() {
	返回 本体;
}

void 对象::析构() {

}

对象& 对象::复制构造(只读 对象 &其他实例) {
	复制(&其他实例, 本元);
	返回 本体;
}

对象& 对象::移动构造(对象 &&其他实例) {
	返回 本体;
}

只读 c8* 对象::转为字符串() {
	返回 "当康::基础类::对象";
}


}
}


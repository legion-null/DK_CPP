#include "当康.h"

引入 当康::基础类;
引入 当康::包装类;
引入 当康::开发者;

命名空间 当康 {
命名空间 图形处理 {

类定义(当康::图形处理::屏幕)

屏幕& 屏幕::构造() {
	日志::格式化打印日志(日志::调试信息, "屏幕& 屏幕::构造()\n");
	返回 本体;
}

void 屏幕::析构() {

}

屏幕& 屏幕::构造(i32 宽度, i32 高度, i32 像素色深, 图形::显示方向 方向) {
	日志::格式化打印日志(日志::调试信息, "屏幕& 屏幕::构造(i32 宽度 = %d, i32 高度 = %d, i32 像素色深 = %d, 图形::显示方向 方向 = %d)\n", 宽度, 高度, 像素色深, 方向);

	画布::构造(宽度, 高度, 像素色深, 方向);

	日志::格式化打印日志(日志::调试信息, "完成 屏幕& 屏幕::构造(i32 宽度 = %d, i32 高度 = %d, i32 像素色深 = %d, 图形::显示方向 方向 = %d)\n", 宽度, 高度, 像素色深, 方向);

	返回 本体;
}

屏幕& 屏幕::复制构造(只读 屏幕 &其他实例) {
	抛出 异常();

	返回 本体;
}

屏幕& 屏幕::移动构造(屏幕 &&其他实例) {
	返回 本体;
}

void 屏幕::刷新() {
	返回 刷新矩形区域(0, 0, 宽度, 高度);
}

void 屏幕::测试() {
	日志::格式化打印日志(日志::调试信息, "void 屏幕::测试()\n");

	静态 只读 颜色 测试用颜色[7] = { 颜色::红色, 颜色::橙色, 颜色::黄色, 颜色::绿色, 颜色::青色, 颜色::蓝色, 颜色::紫色 };

	循环 (i32 i = 0;; i++) {
		清屏(测试用颜色[i % 7]);
		刷新();
	}
}

}
}

